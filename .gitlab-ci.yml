stages:
  - test
  - build
  - deploy

unit-test-job:
  stage: test
  image:  mirror.gcr.io/python:3.12.3-alpine3.20
  before_script:
    - cd ./source
    - pip install poetry
    - poetry config virtualenvs.create false && poetry install --with test --no-root
    - cd ..
  script:
    - echo "Running unit tests..."
    - poetry run source/manage.py test`

component-test-job:
  stage: test
  image: mirror.gcr.io/python:3.12.3-alpine3.20
  before_script:
    - cd ./source
    - pip install poetry
    - poetry config virtualenvs.create false
      && poetry install --with test --no-root
      && poetry add gunicorn
    - poetry run gunicorn --workers=1 -b=0.0.0.0:8000 --daemon general.wsgi:application
    - cd ..

  script:
    - echo "Running component tests..."
    - poetry run pytest ./tests/component/

push-to-yandex-registry:
  stage: deploy
  image: mirror.gcr.io/docker:dind
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - unit-test-job
    - component-test-job
  before_script:
    - echo $YC_JSON_KEY | docker login -u json_key --password-stdin cr.yandex
  script:
    - docker build -f ./Dockerfile -t logs_collection:latest .
    - docker tag logs_collection:latest cr.yandex/$YC_CR_ID/logs_collection:latest
    - docker tag logs_collection:latest cr.yandex/$YC_CR_ID/logs_collection:$CI_PIPELINE_IID
    - docker push cr.yandex/$YC_CR_ID/logs_collection:latest
    - docker push cr.yandex/$YC_CR_ID/logs_collection:$CI_PIPELINE_IID

#deploy-to-yc:
#  stage: deploy
#  image: ubuntu
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#  needs:
#    - push-to-yandex-registry
#  before_script:
#    - echo $YC_JSON_KEY > key.json
#    - apt-get update && apt-get install curl -y
#    - curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yc -a
#    - /opt/yc/bin/yc config profile create sa-profile
#    - /opt/yc/bin/yc config set service-account-key key.json
#    - /opt/yc/bin/yc config set cloud-id $YC_CLOUD_ID
#    - /opt/yc/bin/yc config set folder-id $YC_FOLDER_ID
#  script:
#    - |
#      /opt/yc/bin/yc serverless container revision deploy \
#        --container-name $YC_CONTAINER_NAME \
#        --image cr.yandex/$YC_CR_ID/logs_collection:latest \
#        --service-account-id $YC_SA_ID \
#        --execution-timeout 30s \
#        --cores 1 \
#        --memory 1GB \
#        --concurrency 1
#
